<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">


    <!-- ADMIN SERVICE -->

    <bean name="findAllEstoqueByIdProduto" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT E.ID, E.ID_FORNECEDOR, E.DATA_COMPRA, E.DATA_ATUALIZACAO,
                E.PRECO_COMPRA, E.OBSERVACAO, F.NOME AS NOME_FORNECEDOR,
                (SELECT COUNT(EI.ID)
                         FROM estoque_item EI
                         WHERE EI.ID_ESTOQUE = E.ID
                         AND EI.INVALIDO = 0
                         AND EI.ID NOT IN (SELECT IC.ID_ESTOQUE_ITEM FROM item_carrinho IC WHERE IC.ID_ESTOQUE_ITEM = E.ID)
                ) AS QUANTIDADE_ATUAL,
                E.QUANTIDADE
                FROM estoque E
                JOIN fornecedor F ON F.ID = E.ID_FORNECEDOR
                WHERE E.ID IN (SELECT EI.ID_ESTOQUE
                                FROM estoque_item EI
                                WHERE EI.ID_PRODUTO = :idProduto
                                AND EI.INVALIDO = 0
                )
            </value>
        </constructor-arg>
    </bean>

    <bean name="findEstoqueById" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT E.ID, E.ID_FORNECEDOR, E.DATA_COMPRA, E.DATA_ATUALIZACAO,
                E.PRECO_COMPRA, E.OBSERVACAO,
                (SELECT COUNT(EI.ID)
                    FROM estoque_item EI
                    WHERE EI.ID_ESTOQUE = E.ID
                    AND EI.INVALIDO = 0
                ) AS QUANTIDADE_ATUAL,
                E.QUANTIDADE,
                (SELECT DISTINCT EI.ID_PRODUTO FROM estoque_item EI WHERE EI.ID_ESTOQUE = E.ID) AS ID_PRODUTO
                FROM estoque E WHERE E.ID = :id

            </value>
        </constructor-arg>
    </bean>

    <bean name="findAllProduto" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT P.ID, P.DESCRICAO, TP.DESCRICAO AS NOME_TIPO_PRODUTO, P.PESO, P.HEXA_COR, P.NOME_COR,
                P.ID_TIPO_PRODUTO, P.IMG_DESTAQUE, P.IMG_PREVIEW, P.REFERENCIA,
                (  SELECT PRECO
                    FROM tabela_preco TP
                    WHERE TP.ID_PRODUTO = P.ID AND TP.DATA_VIGENCIA =
                                                        (SELECT MAX(DATA_VIGENCIA)
                                                         FROM tabela_preco TTP
                                                         WHERE TTP.ID_PRODUTO = P.ID
                                                         AND DATA_VIGENCIA &lt;= sysdate())
                     LIMIT 1
                ) AS PRECO
                FROM produto P
                JOIN tipo_produto TP ON TP.ID = P.ID_TIPO_PRODUTO
                WHERE 1 = 1
            </value>
        </constructor-arg>
    </bean>

    <bean name="findAllProduto.filterDescricao" class="java.lang.String">
        <constructor-arg>
            <value>
                AND P.DESCRICAO like :descricao
            </value>
        </constructor-arg>
    </bean>

    <bean name="findAllProduto.filterTipoProduto" class="java.lang.String">
        <constructor-arg>
            <value>
                AND P.ID_TIPO_PRODUTO = :idTipoProduto
            </value>
        </constructor-arg>
    </bean>

    <bean name="findAllProduto.orderByTipoProduto" class="java.lang.String">
        <constructor-arg>
            <value>
                ORDER BY TP.DESCRICAO
            </value>
        </constructor-arg>
    </bean>

    <bean name="findTabelaPrecoAtualByProduto" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT ID, ID_PRODUTO, DATA_VIGENCIA, PRECO, DESCRICAO
                FROM tabela_preco TP
                WHERE TP.ID_PRODUTO = :id AND TP.DATA_VIGENCIA =
                                        (SELECT MAX(DATA_VIGENCIA)
                                         FROM tabela_preco TTP WHERE TTP.ID_PRODUTO = :id
                                         AND DATA_VIGENCIA &lt;= sysdate())
                LIMIT 1
            </value>
        </constructor-arg>
    </bean>


    <bean name="findProdutoEmEstoque" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT P.ID AS ID_PRODUTO, P.REFERENCIA, P.DESCRICAO AS NOME_PRODUTO,
                TP.DESCRICAO AS TIPO_PRODUTO,
                (SELECT COUNT(ID)
                        FROM estoque_item EI
                        WHERE EI.ID_PRODUTO = P.ID
                        AND EI.INVALIDO = 0
                ) AS QUANTIDADE,
                P.ESTOQUE_MINIMO
                FROM produto P
                JOIN tipo_produto TP ON TP.ID = P.ID_TIPO_PRODUTO
            </value>
        </constructor-arg>
    </bean>

    <!-- FIM ADMIN SERVICE -->




    <!-- PRODUTO SERVICE -->

    <bean name="ProdutoService.findAllProduto" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT P.ID,
                P.DESCRICAO,
                TP.PRECO,
                concat('http://stc.meuportaretrato.com/images/d/' , P.IMG_DESTAQUE) as IMG_DESTAQUE,
                P.DESCRICAO_DETALHADA,
                (   SELECT COUNT(ID)
                    FROM estoque_item EI
                    WHERE EI.ID_PRODUTO = P.ID
                    AND EI.INVALIDO = 0
                    AND EI.ID NOT IN  (SELECT ICA.ID_ESTOQUE_ITEM
                                       FROM item_carrinho ICA
                                       WHERE ICA.ID_ESTOQUE_ITEM = EI.ID)
                ) AS QUANTIDADE
                FROM produto P
                JOIN tabela_preco TP ON TP.ID_PRODUTO = P.ID AND TP.DATA_VIGENCIA =
                (SELECT MAX(DATA_VIGENCIA) FROM tabela_preco TTP WHERE TTP.ID_PRODUTO = P.ID
                AND DATA_VIGENCIA &lt;= sysdate())
                JOIN tipo_produto TIPO ON TIPO.ID = P.ID_TIPO_PRODUTO
                WHERE P.ATIVO = 1 AND TIPO.ACESSORIO = 0

            </value>
        </constructor-arg>
    </bean>

    <bean name="ProdutoService.getProdutoById" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT P.ID,
                P.DESCRICAO,
                P.DESCRICAO_DETALHADA,
                P.IMG_PREVIEW,
                P.IMG_DESTAQUE,
                P.HEXA_COR,
                P.NOME_COR,
                TP.PRECO,
                (   SELECT COUNT(ID)
                    FROM estoque_item EI
                    WHERE EI.ID_PRODUTO = P.ID
                    AND EI.INVALIDO = 0
                    AND EI.ID NOT IN  (SELECT ICA.ID_ESTOQUE_ITEM
                                         FROM item_carrinho ICA
                                         WHERE ICA.ID_ESTOQUE_ITEM = EI.ID)
                ) AS QUANTIDADE,
                P.PESO,
                P.COMP,
                P.LARG,
                P.ALT
                FROM produto P
                JOIN tabela_preco TP ON TP.ID_PRODUTO = P.ID AND TP.DATA_VIGENCIA =
                (SELECT MAX(DATA_VIGENCIA) FROM tabela_preco TTP WHERE TTP.ID_PRODUTO = P.ID
                AND DATA_VIGENCIA &lt;= sysdate())
                WHERE P.ID = :id

            </value>
        </constructor-arg>
    </bean>


    <bean name="ProdutoService.getProdutosRelacionados" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT P.ID,
                P.DESCRICAO,
                P.DESCRICAO_DETALHADA,
                P.IMG_PREVIEW,
                P.IMG_DESTAQUE,
                P.HEXA_COR,
                P.NOME_COR,
                TP.PRECO,
                (   SELECT COUNT(ID)
                    FROM estoque_item EI
                    WHERE EI.ID_PRODUTO = P.ID
                    AND EI.INVALIDO = 0
                    AND EI.ID NOT IN  (SELECT ICA.ID_ESTOQUE_ITEM
                                        FROM item_carrinho ICA
                                        WHERE ICA.ID_ESTOQUE_ITEM = EI.ID)
                ) AS QUANTIDADE
                FROM produto P
                JOIN tipo_produto TIPO ON TIPO.ID = P.ID_TIPO_PRODUTO
                JOIN tabela_preco TP ON TP.ID_PRODUTO = P.ID AND TP.DATA_VIGENCIA =
                (SELECT MAX(DATA_VIGENCIA) FROM tabela_preco TTP WHERE TTP.ID_PRODUTO = P.ID
                AND DATA_VIGENCIA &lt;= sysdate())
                WHERE TIPO.ID = (SELECT T.ID FROM produto PP
                                JOIN tipo_produto T ON T.ID = PP.ID_TIPO_PRODUTO
                                WHERE PP.ID = :id)

            </value>
        </constructor-arg>
    </bean>

    <bean name="ProdutoService.getProdutoEmEstoque" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT EI.ID,
                EI.ID_ESTOQUE,
                EI.ID_PRODUTO,
                EI.INVALIDO
                FROM estoque_item EI
                WHERE EI.ID_PRODUTO = :idProduto
                AND EI.INVALIDO = 0
                AND EI.ID NOT IN  (SELECT ICA.ID_ESTOQUE_ITEM
                                    FROM item_carrinho ICA
                                    WHERE ICA.ID_ESTOQUE_ITEM = EI.ID)
                ORDER BY RAND()
                LIMIT 1

            </value>
        </constructor-arg>
    </bean>
    <!-- FIM PRODUTO SERVICE -->


    <bean name="EmbalagemService.findEmbalagem" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT
                    E.ID,
                    E.COMP,
                    E.LARG,
                    E.ALT,
                    E.DESCRICAO,
                    E.ATIVO
                FROM
                embalagem E
                WHERE E.ATIVO = 1
                AND E.COMP >= :comp
                AND E.LARG >= :larg
                AND E.ALT >= :alt
                ORDER BY E.COMP, E.LARG, E.ALT
                LIMIT 1
            </value>
        </constructor-arg>
    </bean>

    <bean name="CupomService.findCupomByName" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT
                    ID,
                    DESCRICAO,
                    HASH,
                    DATA_INICIO,
                    DATA_FIM,
                    PROMOCAO,
                    PORCENTAGEM,
                    QUANTIDADE
                FROM cupom_desconto C
                where C.DATA_FIM &gt;= sysdate()
                and C.QUANTIDADE &gt;= (
                (SELECT COUNT(1) FROM pedido P WHERE P.ID_CUPOM = C.ID) +
                (SELECT COUNT(1) FROM checkout CO WHERE CO.ID_CUPOM = C.ID) )
                and C.HASH = :hash
            </value>
        </constructor-arg>
    </bean>

    <bean name="PedidoService.findPedido" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT P.* FROM (SELECT P.ID,
                P.CODIGO_PEDIDO,
                P.DATA,
                P.ID_CLIENTE,
                P.ID_ENDERECO,
                P.ID_CUPOM,
                P.VALOR_PRODUTOS,
                P.VALOR_FRETE,
                P.VALOR_DESCONTO,
                P.VALOR_TOTAL,
                P.CODIGO_TRANSACAO,
                P.CODIGO_RASTREIO,
                P.TIPO_FRETE,
                P.TIPO_PAGAMENTO,
                P.DATA_ENTREGA,
                P.URL_BOLETO,
                ( SELECT HP.ID_STATUS_PEDIDO
                FROM historico_pedido HP
                WHERE HP.ID_PEDIDO = P.ID
                ORDER BY DATA DESC LIMIT 1) ID_STATUS_PEDIDO
                FROM pedido P ) P
                JOIN status_pedido ST ON ST.ID = P.ID_STATUS_PEDIDO
                WHERE 1 = 1
            </value>
        </constructor-arg>
    </bean>

    <bean name="PedidoService.findPedidoParamStatus" class="java.lang.String">
        <constructor-arg>
            <value>
                and ST.SYS_CODE = :sysCode
            </value>
        </constructor-arg>
    </bean>

    <bean name="PedidoService.findPedidoParamCliente" class="java.lang.String">
        <constructor-arg>
            <value>
                and P.ID_CLIENTE = :idCliente
            </value>
        </constructor-arg>
    </bean>

    <bean name="PedidoService.findPedidoParamCodigo" class="java.lang.String">
        <constructor-arg>
            <value>
                and P.CODIGO_PEDIDO = :codigo
            </value>
        </constructor-arg>
    </bean>

</beans>
