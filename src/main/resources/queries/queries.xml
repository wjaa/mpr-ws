<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">


    <!-- ADMIN SERVICE -->

    <bean name="findAllEstoqueByIdProduto" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT E.ID, E.ID_FORNECEDOR, E.DATA_COMPRA, E.DATA_ATUALIZACAO,
                E.PRECO_COMPRA, E.OBSERVACAO, F.NOME AS NOME_FORNECEDOR,
                (SELECT COUNT(EI.ID)
                         FROM ESTOQUE_ITEM EI
                         WHERE EI.ID_ESTOQUE = E.ID
                         AND EI.INVALIDO = 0
                         AND EI.ID NOT IN  (SELECT ID_ESTOQUE_ITEM
                                            FROM BAIXA_ESTOQUE BE
                                             WHERE BE.ID_ESTOQUE_ITEM = EI.ID)
                ) AS QUANTIDADE_ATUAL,
                E.QUANTIDADE
                FROM ESTOQUE E
                JOIN FORNECEDOR F ON F.ID = E.ID_FORNECEDOR
                WHERE E.ID IN (SELECT EI.ID_ESTOQUE
                                FROM ESTOQUE_ITEM EI
                                WHERE EI.ID_PRODUTO = :idProduto
                                AND EI.INVALIDO = 0
                                AND EI.ID NOT IN (SELECT ID_ESTOQUE_ITEM
                                                   FROM BAIXA_ESTOQUE BE
                                                    WHERE BE.ID_ESTOQUE_ITEM = EI.ID)
                )
            </value>
        </constructor-arg>
    </bean>

    <bean name="findEstoqueById" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT E.ID, E.ID_FORNECEDOR, E.DATA_COMPRA, E.DATA_ATUALIZACAO,
                E.PRECO_COMPRA, E.OBSERVACAO,
                (SELECT COUNT(EI.ID)
                FROM ESTOQUE_ITEM EI
                WHERE EI.ID_ESTOQUE = E.ID
                AND EI.INVALIDO = 0
                AND EI.ID NOT IN  (SELECT ID_ESTOQUE_ITEM
                FROM BAIXA_ESTOQUE BE
                WHERE BE.ID_ESTOQUE_ITEM = EI.ID)
                ) AS QUANTIDADE_ATUAL,
                E.QUANTIDADE,
                (SELECT DISTINCT EI.ID_PRODUTO FROM ESTOQUE_ITEM EI WHERE EI.ID_ESTOQUE = E.ID) AS ID_PRODUTO
                FROM ESTOQUE E WHERE E.ID = :id

            </value>
        </constructor-arg>
    </bean>

    <bean name="findAllProduto" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT P.ID, P.DESCRICAO, TP.DESCRICAO AS NOME_TIPO_PRODUTO, P.PESO, P.HEXA_COR, P.NOME_COR,
                P.ID_TIPO_PRODUTO, P.IMG_DESTAQUE, P.IMG_PREVIEW, P.REFERENCIA,
                (SELECT PRECO
                FROM TABELA_PRECO TP
                WHERE TP.ID_PRODUTO = P.ID AND TP.DATA_VIGENCIA =
                (SELECT MAX(DATA_VIGENCIA) FROM TABELA_PRECO TTP WHERE TTP.ID_PRODUTO = P.ID
                AND DATA_VIGENCIA &lt;= sysdate()) LIMIT 1) AS PRECO
                FROM PRODUTO P
                JOIN TIPO_PRODUTO TP ON TP.ID = P.ID_TIPO_PRODUTO
            </value>
        </constructor-arg>
    </bean>

    <bean name="findTabelaPrecoAtualByProduto" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT ID, ID_PRODUTO, DATA_VIGENCIA, PRECO, DESCRICAO
                FROM TABELA_PRECO TP
                WHERE TP.ID_PRODUTO = :id AND TP.DATA_VIGENCIA =
                (SELECT MAX(DATA_VIGENCIA) FROM TABELA_PRECO TTP WHERE TTP.ID_PRODUTO = :id
                AND DATA_VIGENCIA &lt;= sysdate()) LIMIT 1
            </value>
        </constructor-arg>
    </bean>


    <bean name="findProdutoEmEstoque" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT P.ID AS ID_PRODUTO, P.REFERENCIA, P.DESCRICAO AS NOME_PRODUTO,
                TP.DESCRICAO AS TIPO_PRODUTO,
                (SELECT COUNT(ID)
                        FROM ESTOQUE_ITEM EI
                        WHERE EI.ID_PRODUTO = P.ID
                        AND EI.INVALIDO = 0
                        AND EI.ID NOT IN  (SELECT BE.ID_ESTOQUE_ITEM
                                                FROM BAIXA_ESTOQUE BE
                                                WHERE BE.ID_ESTOQUE_ITEM = EI.ID)
                ) AS QUANTIDADE,
                P.ESTOQUE_MINIMO
                FROM PRODUTO P
                JOIN TIPO_PRODUTO TP ON TP.ID = P.ID_TIPO_PRODUTO
            </value>
        </constructor-arg>
    </bean>

    <!-- FIM ADMIN SERVICE -->




    <!-- PRODUTO SERVICE -->

    <bean name="ProdutoService.findAllProduto" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT P.ID,
                P.DESCRICAO,
                TP.PRECO,
                (   SELECT COUNT(ID)
                    FROM ESTOQUE_ITEM EI
                    WHERE EI.ID_PRODUTO = P.ID
                    AND EI.INVALIDO = 0
                    AND EI.ID NOT IN  (SELECT BE.ID_ESTOQUE_ITEM
                                        FROM BAIXA_ESTOQUE BE
                                        WHERE BE.ID_ESTOQUE_ITEM = EI.ID
                                       )
                    AND EI.ID NOT IN  (SELECT ICA.ID_ESTOQUE_ITEM
                                       FROM ITEM_CARRINHO ICA
                                       WHERE ICA.ID_ESTOQUE_ITEM = EI.ID
                                      )
                ) AS QUANTIDADE
                FROM PRODUTO P
                JOIN TABELA_PRECO TP ON TP.ID_PRODUTO = P.ID AND TP.DATA_VIGENCIA =
                (SELECT MAX(DATA_VIGENCIA) FROM TABELA_PRECO TTP WHERE TTP.ID_PRODUTO = P.ID
                AND DATA_VIGENCIA &lt;= sysdate())
                JOIN TIPO_PRODUTO TIPO ON TIPO.ID = P.ID_TIPO_PRODUTO
                WHERE P.ATIVO = 1 AND TIPO.ACESSORIO = 0

            </value>
        </constructor-arg>
    </bean>

    <bean name="ProdutoService.getProdutoById" class="java.lang.String">
        <constructor-arg>
            <value>
                SELECT P.ID,
                P.DESCRICAO,
                P.DESCRICAO_DETALHADA,
                P.IMG_PREVIEW,
                P.IMG_DESTAQUE,
                TP.PRECO
                FROM PRODUTO P
                JOIN TABELA_PRECO TP ON TP.ID_PRODUTO = P.ID AND TP.DATA_VIGENCIA =
                (SELECT MAX(DATA_VIGENCIA) FROM TABELA_PRECO TTP WHERE TTP.ID_PRODUTO = P.ID
                AND DATA_VIGENCIA &lt;= sysdate())
                WHERE P.ID = :id

            </value>
        </constructor-arg>
    </bean>


    <!-- FIM PRODUTO SERVICE -->

</beans>
